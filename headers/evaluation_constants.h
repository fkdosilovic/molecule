#ifndef MOLECULE_EVALUATION_CONSTANTS_H
#define MOLECULE_EVALUATION_CONSTANTS_H

#include "constants.h"

// note: tables are taken from https://chessprogramming.wikispaces.com/Simplified+evaluation+function

constexpr INT32 PieceValues[] {
  0,
  100, 350, 350, 525, 1000, 5000, 0,
  100, 350, 350, 525, 1000, 5000, 0, 0
};

constexpr INT32 PieceSquareTables[PIECE_TYPE_SIZE][BOARD_SIZE + 1] {
  {
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // pawn table
    0, 0, 0, 0, 0, 0, 0, 0,
    5, 10, 10, -20, -20, 10, 10, 5,
    5, -5, -10, 0, 0, -10, -5, 5,
    0, 0, 0, 20, 20, 0, 0, 0,
    5, 5, 10, 25, 25, 10, 5, 5,
    10, 10, 20, 30, 30, 20, 10, 10,
    50, 50, 50, 50, 50, 50, 50, 50,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // knight table
    -50, -40, -30, -30, -30, -30, -40, -50,
    -40, -20, 0, 5, 5, 0, -20, -40,
    -30, 5, 10, 15, 15, 10, 5, -30,
    -30, 0, 15, 20, 20, 15, 0, -30,
    -30, 5, 15, 20, 20, 15, 5, -30,
    -30, 0, 10, 15, 15, 10, 0, -30,
    -40, -20, 0, 0, 0, 0, -20, -40,
    -50, -40, -30, -30, -30, -30, -40, -50, 0
  },

  { // bishop table
    -20, -10, -10, -10, -10, -10, -10, -20,
    -10, 5, 0, 0, 0, 0, 5, -10,
    -10, 10, 10, 10, 10, 10, 10, -10,
    -10, 0, 10, 10, 10, 10, 0, -10,
    -10, 5, 5, 10, 10, 5, 5, -10,
    -10, 0, 5, 10, 10, 5, 0, -10,
    -10, 0, 0, 0, 0, 0, 0, -10,
    -20, -10, -10, -10, -10, -10, -10, -20, 0
  },

  { // rook table
    0, 0, 0, 5, 5, 0, 0, 0,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    5, 10, 10, 10, 10, 10, 10, 5,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // queen table
    -20, -10, -10, -5, -5, -10, -10, -20,
    -10, 0, 5, 0, 0, 0, 0, -10,
    -10, 5, 5, 5, 5, 5, 0, -10,
    0, 0, 5, 5, 5, 5, 0, -5,
    -5, 0, 5, 5, 5, 5, 0, -5,
    -10, 0, 5, 5, 5, 5, 0, -10,
    -10, 0, 0, 0, 0, 0, 0, -10,
    -20, -10, -10, -5, -5, -10, -10, -20, 0
  },

  { // king table
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // white table
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // black pawn table
    0, 0, 0, 0, 0, 0, 0, 0,
    5, 10, 10, -20, -20, 10, 10, 5,
    5, -5, -10, 0, 0, -10, -5, 5,
    0, 0, 0, 20, 20, 0, 0, 0,
    5, 5, 10, 25, 25, 10, 5, 5,
    10, 10, 20, 30, 30, 20, 10, 10,
    50, 50, 50, 50, 50, 50, 50, 50,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // black knight table
    -50, -40, -30, -30, -30, -30, -40, -50,
    -40, -20, 0, 5, 5, 0, -20, -40,
    -30, 5, 10, 15, 15, 10, 5, -30,
    -30, 0, 15, 20, 20, 15, 0, -30,
    -30, 5, 15, 20, 20, 15, 5, -30,
    -30, 0, 10, 15, 15, 10, 0, -30,
    -40, -20, 0, 0, 0, 0, -20, -40,
    -50, -40, -30, -30, -30, -30, -40, -50, 0
  },

  { // black bishop table
    -20, -10, -10, -10, -10, -10, -10, -20,
    -10, 5, 0, 0, 0, 0, 5, -10,
    -10, 10, 10, 10, 10, 10, 10, -10,
    -10, 0, 10, 10, 10, 10, 0, -10,
    -10, 5, 5, 10, 10, 5, 5, -10,
    -10, 0, 5, 10, 10, 5, 0, -10,
    -10, 0, 0, 0, 0, 0, 0, -10,
    -20, -10, -10, -10, -10, -10, -10, -20, 0
  },

  { // black rook table
    0, 0, 0, 5, 5, 0, 0, 0,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    5, 10, 10, 10, 10, 10, 10, 5,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  },

  { // black queen table
    -20, -10, -10, -5, -5, -10, -10, -20,
    -10, 0, 5, 0, 0, 0, 0, -10,
    -10, 5, 5, 5, 5, 5, 0, -10,
    0, 0, 5, 5, 5, 5, 0, -5,
    -5, 0, 5, 5, 5, 5, 0, -5,
    -10, 0, 5, 5, 5, 5, 0, -10,
    -10, 0, 0, 0, 0, 0, 0, -10,
    -20, -10, -10, -5, -5, -10, -10, -20, 0
  },

  { // black king table
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0
  }
};

// add tables for king, king middle game and king endgame

constexpr INT32 Mirror[BOARD_SIZE] {
  56,	57,	58,	59,	60,	61,	62,	63,
  48,	49,	50,	51,	52,	53,	54,	55,
  40,	41,	42,	43,	44,	45,	46,	47,
  32,	33,	34,	35,	36,	37,	38,	39,
  24,	25,	26,	27,	28,	29,	30,	31,
  16,	17,	18,	19,	20,	21,	22,	23,
  8,	9,	10,	11,	12,	13,	14,	15,
  0,	1,	2,	3, 4,	5, 6, 7
};

constexpr UINT64 FileMask[] {
  72340172838076673ULL, 144680345676153346ULL, 289360691352306692ULL, 578721382704613384ULL, 1157442765409226768ULL, 2314885530818453536ULL, 4629771061636907072ULL, 9259542123273814144ULL
};

constexpr UINT64 RankMask[] {
  255ULL, 65280ULL, 16711680ULL, 4278190080ULL, 1095216660480ULL, 280375465082880ULL, 71776119061217280ULL, 18374686479671623680ULL
};

constexpr UINT64 WhitePassed[BOARD_SIZE] {
  217020518514230016ULL, 506381209866536704ULL, 1012762419733073408ULL, 2025524839466146816ULL, 4051049678932293632ULL, 8102099357864587264ULL, 16204198715729174528ULL, 13889313184910721024ULL,
  217020518514229248ULL, 506381209866534912ULL, 1012762419733069824ULL, 2025524839466139648ULL, 4051049678932279296ULL, 8102099357864558592ULL, 16204198715729117184ULL, 13889313184910671872ULL,
  217020518514032640ULL, 506381209866076160ULL, 1012762419732152320ULL, 2025524839464304640ULL, 4051049678928609280ULL, 8102099357857218560ULL, 16204198715714437120ULL, 13889313184898088960ULL,
  217020518463700992ULL, 506381209748635648ULL, 1012762419497271296ULL, 2025524838994542592ULL, 4051049677989085184ULL, 8102099355978170368ULL, 16204198711956340736ULL, 13889313181676863488ULL,
  217020505578799104ULL, 506381179683864576ULL, 1012762359367729152ULL, 2025524718735458304ULL, 4051049437470916608ULL, 8102098874941833216ULL, 16204197749883666432ULL, 13889312357043142656ULL,
  217017207043915776ULL, 506373483102470144ULL, 1012746966204940288ULL, 2025493932409880576ULL, 4050987864819761152ULL, 8101975729639522304ULL, 16203951459279044608ULL, 13889101250810609664ULL,
  216172782113783808ULL, 504403158265495552ULL, 1008806316530991104ULL, 2017612633061982208ULL, 4035225266123964416ULL, 8070450532247928832ULL, 16140901064495857664ULL, 13835058055282163712ULL,
  0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL
};

constexpr UINT64 BlackPassed[BOARD_SIZE] {
  0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL,
  196608ULL, 458752ULL, 917504ULL, 1835008ULL, 3670016ULL, 7340032ULL, 14680064ULL, 12582912ULL,
  12935233536ULL, 30182211584ULL, 60364423168ULL, 120728846336ULL, 241457692672ULL, 482915385344ULL, 965830770688ULL, 827854946304ULL,
  847736349917184ULL, 1978051483140096ULL, 3956102966280192ULL, 7912205932560384ULL, 15824411865120768ULL, 31648823730241536ULL, 63297647460483072ULL, 54255126394699776ULL,
  217020505578799107ULL, 506381179683864583ULL, 1012762359367729166ULL, 2025524718735458332ULL, 4051049437470916664ULL, 8102098874941833328ULL, 16204197749883666656ULL, 13889312357043142848ULL,
  217017207044113155ULL, 506373483102930695ULL, 1012746966205861390ULL, 2025493932411722780ULL, 4050987864823445560ULL, 8101975729646891120ULL, 16203951459293782240ULL, 13889101250823241920ULL,
  216172795049214723ULL, 504403188448167687ULL, 1008806376896335374ULL, 2017612753792670748ULL, 4035225507585341496ULL, 8070451015170682992ULL, 16140902030341365984ULL, 13835058883149742272ULL,
  847736400446211ULL, 1978051601041159ULL, 3956103202082318ULL, 7912206404164636ULL, 15824412808329272ULL, 31648825616658544ULL, 63297651233317088ULL, 54255129628557504ULL
};

constexpr UINT64 WhiteIsolated[BOARD_SIZE] {
  144680345676153344ULL, 361700864190383360ULL, 723401728380766720ULL, 1446803456761533440ULL, 2893606913523066880ULL, 5787213827046133760ULL, 11574427654092267520ULL, 4629771061636907008ULL,
  144680345676152832ULL, 361700864190382080ULL, 723401728380764160ULL, 1446803456761528320ULL, 2893606913523056640ULL, 5787213827046113280ULL, 11574427654092226560ULL, 4629771061636890624ULL,
  144680345676021760ULL, 361700864190054400ULL, 723401728380108800ULL, 1446803456760217600ULL, 2893606913520435200ULL, 5787213827040870400ULL, 11574427654081740800ULL, 4629771061632696320ULL,
  144680345642467328ULL, 361700864106168320ULL, 723401728212336640ULL, 1446803456424673280ULL, 2893606912849346560ULL, 5787213825698693120ULL, 11574427651397386240ULL, 4629771060558954496ULL,
  144680337052532736ULL, 361700842631331840ULL, 723401685262663680ULL, 1446803370525327360ULL, 2893606741050654720ULL, 5787213482101309440ULL, 11574426964202618880ULL, 4629770785681047552ULL,
  144678138029277184ULL, 361695345073192960ULL, 723390690146385920ULL, 1446781380292771840ULL, 2893562760585543680ULL, 5787125521171087360ULL, 11574251042342174720ULL, 4629700416936869888ULL,
  144115188075855872ULL, 360287970189639680ULL, 720575940379279360ULL, 1441151880758558720ULL, 2882303761517117440ULL, 5764607523034234880ULL, 11529215046068469760ULL, 4611686018427387904ULL,
  0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL
};

constexpr UINT64 BlackIsolated[BOARD_SIZE] {
  0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL, 0ULL,
  2ULL, 5ULL, 10ULL, 20ULL, 40ULL, 80ULL, 160ULL, 64ULL,
  514ULL, 1285ULL, 2570ULL, 5140ULL, 10280ULL, 20560ULL, 41120ULL, 16448ULL,
  131586ULL, 328965ULL, 657930ULL, 1315860ULL, 2631720ULL, 5263440ULL, 10526880ULL, 4210752ULL,
  33686018ULL, 84215045ULL, 168430090ULL, 336860180ULL, 673720360ULL, 1347440720ULL, 2694881440ULL, 1077952576ULL,
  8623620610ULL, 21559051525ULL, 43118103050ULL, 86236206100ULL, 172472412200ULL, 344944824400ULL, 689889648800ULL, 275955859520ULL,
  2207646876162ULL, 5519117190405ULL, 11038234380810ULL, 22076468761620ULL, 44152937523240ULL, 88305875046480ULL, 176611750092960ULL, 70644700037184ULL,
  565157600297474ULL, 1412894000743685ULL, 2825788001487370ULL, 5651576002974740ULL, 11303152005949480ULL, 22606304011898960ULL, 45212608023797920ULL, 18085043209519168ULL
};

#endif // MOLECULE_EVALUATION_CONSTANTS_H
